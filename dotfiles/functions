#!/bin/bash

# Clone or update via Git
function git_clone_or_update() {
    if [[ -n $(command -v iftop 2> /dev/null) ]]; then
        if [[ -d "${2}" ]]; then
            cd "${2}" || exit
            git pull
            cd - || exit
        else
            git clone "${1}" "${2}"
        fi
    else
        echo_error "Git is not installed, please install and revisit."
    fi
}


# Install SSH Agent
function setup_ssh_agent () {
  # SSH-Agent for not needing to input passwords every time
  if which ssh-agent > /dev/null; then
    if test -f "$HOME/.ssh/id_rsa"; then
      if [[ -n "$SSH_AGENT_PID" ]]; then
        ssh_agent_pid=$(ps x | awk '{ print $1 }' | grep "^${SSH_AGENT_PID}$")
        if [[ "$ssh_agent_pid" != "$SSH_AGENT_PID" ]]; then
          unset SSH_AGENT_PID
          unset SSH_AUTH_SOCK
        fi
      fi

      if [[ -z "$SSH_AGENT_PID" ]]; then
        eval "$(ssh-agent -s)"
        ssh-add "$HOME/.ssh/id_rsa"
      fi
    fi
  fi

}

# ASDF related installs
function install_asdf() {
  if [[ -z $(which asdf 2> /dev/null) ]]; then
    export ASDF_HOME="$HOME/.asdf"
    git_clone_or_update "https://github.com/asdf-vm/asdf.git" "$ASDF_HOME"
    cd "$ASDF_HOME" || exit
    git checkout "$(git describe --abbrev=0 --tags)"
    . asdf.sh
    cd -
  fi
}


function asdf_upgrade() {
  echo "asdf_upgrade"
  version=$(asdf list-all "$1" | grep -o "^[0-9.]\+$" | sort -V | tail -1)
  asdf install "$1" "$version"
  asdf global "$1" "$version"
}